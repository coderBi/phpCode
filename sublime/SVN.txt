SVN: subversion，子级源代码版本控制管理系统
	1，解决问题：避免多个人同时开发的代码覆盖
	2，特点：多人开发不会出现代码覆盖、针对一个文件可以创建不同的版本
SVN软件安装：服务器端安装（setup-subversion，一般安装到自己指定目录）  客户端安装(tortoiseSVN)

******************************************
创建svn仓库： svnadmin create h:/svnServer/app/shop
******************************************
启动仓库服务：svnserve -d（独立端口运行） -r(仓库地址)。例如 svnserve -d -r h:/svnServer/app/shop。svn有自己的svn协议，端口韩是3690
******************************************
本地客户端连接仓库：右键-->svnCheckout(检出)，设置url为svn://localhost。如果本地工作目录与仓库成功取得联系，在当前目录下面会出现一个隐藏的目录'.svn'
note:首次取得联系，会将最新的文件自动的传到本地
******************************************
添加用户权限：在svnserver\app\shop\conf\svnserver.conf中如果注释掉 ’anon-access = write‘ 就会添加匿名写权限
******************************************
提交一个文件：右键一个文件-->svn-->add（添加本地的.svn对该文件的管理）
			  右键文件-->commit(本地的文件提交给svn仓库)
note：直接在文件夹空白位置右键-->commit，会上传里面的所有文件，如果有文件没有添加到.svn管理，会自动添加
******************************************
将仓库最新文件更新到本地： 右键--> update
******************************************
同时运行多个svn仓库：
	1，svnserve -d -r h:/svnserver/app
	2，删除已有的.svn
	3，将checkout的url改成比如 svn://localhost/host	
******************************************	
将文件版本更新到指定版本： 右键--> svn--->update to revision-->查看日志选择不同版本

******************************************
两个程序员对一个文件进行操作的冲突处理：
	1，令牌方式： 为每一个文件设置令牌，谁获得了令牌就只有他能进行开发。例如vss（visual source safe）使用的是令牌
	2，通过版本号码：如果服务器上面的最新版本号码比当前提交者的版本号码高，那么当前用户需要先将自己本地的版本号码更新为最新的（服务器最新文件与本地文件进行合并操作），然后再进行自己的提交。svn是通过版本号码进行冲突解决的
	note：如果两个修改的代码在同一处，那么后一个提交的在更新操作的时候会报出同一位置的冲突，在其自己的工作目录下面会出现额外的三个文件：旧版本文件，目前版本文件，自己修改后的文件。这三个文件是供用户进行文件比对的，用户查看这三个文件跟目前的冲突文件，进行冲突文件修改，然后删除这三个文件并修改当前冲突文件，符合要求之后再进行提交

******************************************
账号与权限控制：先开启conf里面的authz跟password配置，然后在password 文件里面添加 用户名=密码。在authz里面配置个人及小组的权限