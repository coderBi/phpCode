php运算符：
	1，算符运算符：+ - * % / 
		a）都只是针对数字的运算
		b）如果运算的不是数字，会进行自动类型转换
		c）其中 % 运算只对整数有效，如果出现小数，会
			截取整数部分（不会4舍5入）。例如 11.8 % 3 = 11 % 3
		d) 值得注意的是计算机里面处理减法运算其实是将负数去补码做加法。也就是说 + - 其实全是加法
	2，自增自减运算符： ++ --
		a）常规：对数字
		b）对字符串： 只有自增运算,在不改变字符串长度的基础上，对末尾加一
			--字符串里面如果是数字加1后逢10 向前进1；
			--字符串里面如果是a~z（或者大写）加1 逢Z向前进一位
			--字符串里面（最后一位）如果是其他字符例如
			汉字不会出现任何效果
		c)bool: ++ -- 都无效
		d）null递减无效 ，递增结果为 1
	3，前自增（减）与后自增（减）区别：
		跟C里面一样，循环里面尽量写成++i，尽管有的编译器可能优化，但是不应该依赖于机器的优化。（多了一个送存中间变量的汇编语句）
	4，比较运算符：> < <= >= == != === !===
		a）一般： 针对数字
		b）== 与 ===： 前者是模糊相等，后者是精确比较，精确比较包括数据值与数据类型都相同
		c)不应该对浮点数直接比较大小：应该处理一定的精度后再比较
	5，逻辑运算符： && ! ||
	6,字符串运算符： . .=
		a)如果运算的数据项不是字符串，会自动转换为字符串,例如
			12 . 3 = "123"
	7,赋值运算符： =  .=  += -=
	8，条件运算符： 表达式1 ？ 表达式2 ： 表达式3
	9，位运算符：只是针对于数字而言  & | ~ ^ << >>
	10,数组运算符： + == !== ==== !===
		a）+: 数组联合（串联），将右边的数据项合并到左边数组后面，如果有相同的，最终结果以左边为准。
		b） ==： 两个数组具有相同key和value  不需要顺序也一样
		例如array(3=>33, 2=>22) == array(3=>"33", 2=>"22") 
		c） ===： 两个数组具有相同key和value  并且顺序也一样
		d)无论是== 还是=== 比较的时候不考虑key月value的类型
	11,错误控制运算符： @  作用是如果语句错误则屏蔽失败的错误提示，如 @func（）

php运算符的优先级：
	1，运算级不够明确的时候，程序应该尽量用 （） 处理
	2，优先级： () > 单目运算符 > 算术运算 > 比较 > 除了非的逻辑运算 > 赋值
