php文件操作：
	读： file_get_contents(文件地址)：返回字符串内容
	写：file_put_contents($file,$content,写入的方式): 返回写入的字节数，如果文件不存在会自动创建,如果第三个参数设置为FIEL_APPEND 那么如果文件中已经有内容会追加写入，默认是覆盖的
文件操作相关函数： 当文件比较大的时候，不能用file_get_contents跟file_put_contents一次性完成操作的时候，需要下面的函数进行更细致的操作
	fopen(文件地址，打开模式): 打开文件，获取文件句柄。打开模式可以设置为'r' 'w'（打开时将文件的内容置空） 'a'(追加) 'r+'(读写)
	fgetc(文件句柄):读取一个字节的内容（也就是可以一次读一个英文字母却没有办法一次读取一个中文字符）
	fgets(文件句柄，长度：1024 + 1): 返回字符串内容，从指定位置读取固定长度的字符串。其读入的指定位置是由文件内部的指针决定。如果遇到终结符（默认换行符）会自动终止
	fread(文件句柄，长度): 一次读取固定长度的内容，不受换行符的影响。这个函数可以接受的最大长度是8192（8K），超过8k不能一次性读取
	fwrite(句柄，内容): 返回的是写入的长度。
	fclose(句柄):释放文件句柄
	feof(文件句柄): 判断指针是否到了文件的末尾，返回布尔值。例如 while(!feof($handle)){ $line = fgets($hanlde,1024 + 1);}
	fseek(句柄，索引值：从0开始):定位到指针位置
	ftell(句柄)：返回当前指针的位置
文件打开模式详细：
	基础模式：r w(置空写) a（追加写） x（新建写，这个文件如果已经存在就会出错。）
	扩展模式：r+  w+  a+(读操作时常规读，跟指针有关，但是写是追加写，只能在末尾写入，跟指针无关) x+(常规读，常规写，指针在哪里就在哪里进行读写)
	**note： 所谓的常规写实际上是进行替换
文件属性相关函数：
	filetime（文件地址）：文件最后修改时间，返回的是一个时间戳。例如 echo date('H:i:s', filetime('./xx.txt'))
	filesize(文件地址)： 获取文件的大小，返回的是字节数
文件的并发操作：
	1，默认情况下，多个脚本可以同时操作同一个文件，文件操作的相关函数都不是线程安全的
	2，使用文件锁：加锁结果 = flock(文件句柄，锁定类型)，成功返回true。其中“加锁类型”有；读锁，是共享锁，s-lock，可以共享读但是阻塞写操作，参数设置为LOCK_SH。 写锁，为独占锁，x-lock，会阻塞其他的读写操作,参数设置为LOCK_EX。例如： $lock_result= flock($handle,LOCK_SH |LOCK_NB); if($lock_result){ fgets($handle,8);} else{echo "加锁失败"}。LOCK_NB 的作用是如果加锁失败不会去等待其他线程的解锁而直接去执行加锁语句之后的其他语句
*********************************************
字符：逻辑概念，能够展示看到的任意的符号，包括单字节字符跟多字节字符
字节： 基础的存储概念
位：基础的计算概念
*********************************************