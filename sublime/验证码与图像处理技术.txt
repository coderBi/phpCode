php图像创建步骤：
	1，创建画布： 
	Imagecreatetruecolor(宽，高): 创建真彩色画布（图像），可以支持24位色
	Imagecreate(宽，高): 创建基于调色板画布。只支持256色
	2，操作画布： 使用不同工具函数，在画布上做不同处理。例如画线画框
	分配颜色： 颜色标志 = Imagecolorallocate（画布，R,G,B）
	颜色填充：Imagefill(画布，位置x，位置y，颜色标识): 在某张画布上某个位置进行填充。要注意的是对于新建的画布在任何位置填充都是可以的
	3,获得不同格式的图像： 如果下面的函数图像地址参数省略就会直接打印到浏览器。如果是打印到浏览器，需要将图像类型告知浏览器，否则会出现乱码
	Imgagepeg(画布，图像地址)
	Imgagegif(画布，图像地址)
	Imgagejpeg(画布，图像地址)
	4，销毁画布： imagedestroy(画布)
	5, 打开画布： imagecreatefrompng(图像地址)
				  imagecreatefromgif(图像地址)
				  imagecreatefromjpeg(图像地址)
    6，写字符串到画布： imageString(画布，字体标号（内置1~5实际关联不同大小），位置x，位置y，内容，颜色): 这个函数只能书写ascii，使用的是内部字体，仅仅需要指定大小：1~5, 5最大。这里的1~5是一个字体的标号
图像处理的错误处理：
	1，出错时候，首先要将header("content-type:image/png")注释掉，这样发给浏览器的错误信息才能显示，否则也会被当做图片文件进行解析
	2，一般出错，既可能是图像文件及其路径有问题，也可能是在图片本身输出前后输出了额外的信息（编码不规范问题，即使多出一个空格也会出问题）导致浏览器解析图片失败
	3，建议规范：所有的php文件顶层都以<?php 开始，一般不在最后书写 ?>因为如果书写了结束标志，结束标志后面的内容（即使不下心打了一个空格）会当做html文件解析
	4，文件编码如果戴上了BOM（文件最前面多了三个隐藏字符），也会导致图像文件输出失败。bom又叫utf签名。对于图像这类严格限制输出的情况，代码规范很重要
其他函数：
	1，得到画布宽： imagesx（画布）
	2，得到画布高： imagesy（画布）
	3，字体宽：imagefontwidth(字体)。参数是int类型代表的是字体的标号，返回的是像素
	4，字体高：imagefontheight(字体)
验证码(Captcha:completely automated public turing test to tell computers and humans apart)作用：
	1，登录：防止暴力破解

